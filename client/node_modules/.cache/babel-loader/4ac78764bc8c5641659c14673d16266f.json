{"ast":null,"code":"var _jsxFileName = \"/workspace/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux'; // Import FormInput for our form\n\nimport FormInput from '../form-input/form-input.component'; // Import CustomButton for our form's buttons\n\nimport CustomButton from '../custom-button/custom-button.component'; // Import our action so we can dispatch it into our component\n\nimport { signUpStart } from '../../redux/user/user.actions'; // Import styled components\n\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles'; // We want to set a state so we create a Class component\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      // We want to prevent the default when the form is submitted\n      event.preventDefault(); // We need to destructure the signUpStart from our props\n\n      const {\n        signUpStart\n      } = this.props; // We destructure all the props from the state\n\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state; // If the passwords don't match, we display an alert\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords don't match\");\n        return;\n      } // If the passwords do match, we call our signUpStart\n      // method and pass in the email, password and displayName\n      // These are the userCredentials that get passed in our\n      // mapDispatchToProps\n\n\n      signUpStart({\n        email,\n        password,\n        displayName\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    // Destructure props from our state\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return React.createElement(SignUpContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(SignUpTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      handleChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      handleChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      handleChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      handleChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n} // This allows us to dispatch the email, password\n// and displayName credentials to our props\n\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/workspace/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUpContainer","SignUpTitle","SignUp","Component","constructor","props","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","alert","handleChange","name","value","target","setState","render","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n// Import FormInput for our form\nimport FormInput from '../form-input/form-input.component';\n// Import CustomButton for our form's buttons\nimport CustomButton from '../custom-button/custom-button.component';\n// Import our action so we can dispatch it into our component\nimport { signUpStart } from '../../redux/user/user.actions';\n\n// Import styled components\nimport {\n    SignUpContainer,\n    SignUpTitle\n} from './sign-up.styles';\n\n// We want to set a state so we create a Class component\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        // We want to prevent the default when the form is submitted\n        event.preventDefault();\n        // We need to destructure the signUpStart from our props\n        const { signUpStart } = this.props;\n        // We destructure all the props from the state\n        const { displayName, email, password, confirmPassword } = this.state;\n        // If the passwords don't match, we display an alert\n        if (password !== confirmPassword) {\n            alert(\"Passwords don't match\");\n            return;\n        }\n        // If the passwords do match, we call our signUpStart\n        // method and pass in the email, password and displayName\n        // These are the userCredentials that get passed in our\n        // mapDispatchToProps\n        signUpStart({ email, password, displayName });\n    };\n\n    // This is the same as the sign in method\n    handleChange = event => {\n        const { name, value } = event.target;\n\n        this.setState({ [name]: value });\n     }\n\n    render() {\n        // Destructure props from our state\n        const { displayName, email, password, confirmPassword } = this.state;\n\n        return(\n            <SignUpContainer>\n                <SignUpTitle>I do not have an account</SignUpTitle>\n                <span>Sign up with your email and password</span>\n\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\n                    <FormInput\n                        type='text'\n                        name='displayName'\n                        value={ displayName }\n                        handleChange={ this.handleChange }\n                        label='Display Name'\n                        required\n                    />\n                    <FormInput\n                        type='email'\n                        name='email'\n                        value={ email }\n                        handleChange={ this.handleChange }\n                        label='Email'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={ password }\n                        handleChange={ this.handleChange }\n                        label='Password'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={ confirmPassword }\n                        handleChange={ this.handleChange }\n                        label='Confirm Password'\n                        required\n                    />\n\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                </form>\n            </SignUpContainer>\n        );\n    }\n}\n\n// This allows us to dispatch the email, password\n// and displayName credentials to our props\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials =>\n        dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(SignUp);\n"]},"metadata":{},"sourceType":"module"}