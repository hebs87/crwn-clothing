{"ast":null,"code":"// Import CartActionTypes\nimport CartActionTypes from './cart.types'; // We don't need to pass a payload into this\n// action, as we are just switching the state\n// direcly in the reducer (the payload is an\n// optional property)\n\nexport const toggleCartHidden = () => ({\n  type: CartActionTypes.TOGGLE_CART_HIDDEN\n}); // We create a new action that allows us to\n// add items to the cart. We get the item\n// and then we pass it into the payload as\n// its value\n\nexport const addItem = item => ({\n  type: CartActionTypes.ADD_ITEM,\n  payload: item\n}); // We create a new action that allows us to\n// remove a single item from the cart.\n// We get the item and then we pass it into\n// the payload as its value\n\nexport const removeItem = item => ({\n  type: CartActionTypes.REMOVE_ITEM,\n  payload: item\n}); // We create a new action that allows us to\n// clear an item from the cart, regardless\n// of its quantity. We get the item and\n// then we pass it into the payload as\n// its value\n\nexport const clearItemFromCart = item => ({\n  type: CartActionTypes.CLEAR_ITEM_FROM_CART,\n  payload: item\n}); // This action only fires off the action type\n\nexport const clearCart = () => ({\n  type: CartActionTypes.CLEAR_CART\n});","map":{"version":3,"sources":["/workspace/crwn-clothing/src/redux/cart/cart.actions.js"],"names":["CartActionTypes","toggleCartHidden","type","TOGGLE_CART_HIDDEN","addItem","item","ADD_ITEM","payload","removeItem","REMOVE_ITEM","clearItemFromCart","CLEAR_ITEM_FROM_CART","clearCart","CLEAR_CART"],"mappings":"AAAA;AACA,OAAOA,eAAP,MAA4B,cAA5B,C,CAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,OAAO;AACnCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADa,CAAP,CAAzB,C,CAIP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAGC,IAAI,KAAK;AAC5BH,EAAAA,IAAI,EAAEF,eAAe,CAACM,QADM;AAE5BC,EAAAA,OAAO,EAAEF;AAFmB,CAAL,CAApB,C,CAKP;AACA;AACA;AACA;;AACA,OAAO,MAAMG,UAAU,GAAGH,IAAI,KAAK;AAC/BH,EAAAA,IAAI,EAAEF,eAAe,CAACS,WADS;AAE/BF,EAAAA,OAAO,EAAEF;AAFsB,CAAL,CAAvB,C,CAKP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMK,iBAAiB,GAAGL,IAAI,KAAK;AACtCH,EAAAA,IAAI,EAAEF,eAAe,CAACW,oBADgB;AAEtCJ,EAAAA,OAAO,EAAEF;AAF6B,CAAL,CAA9B,C,CAKP;;AACA,OAAO,MAAMO,SAAS,GAAG,OAAO;AAC5BV,EAAAA,IAAI,EAAEF,eAAe,CAACa;AADM,CAAP,CAAlB","sourcesContent":["// Import CartActionTypes\nimport CartActionTypes from './cart.types';\n\n// We don't need to pass a payload into this\n// action, as we are just switching the state\n// direcly in the reducer (the payload is an\n// optional property)\nexport const toggleCartHidden = () => ({\n    type: CartActionTypes.TOGGLE_CART_HIDDEN\n});\n\n// We create a new action that allows us to\n// add items to the cart. We get the item\n// and then we pass it into the payload as\n// its value\nexport const addItem = item => ({\n    type: CartActionTypes.ADD_ITEM,\n    payload: item\n});\n\n// We create a new action that allows us to\n// remove a single item from the cart.\n// We get the item and then we pass it into\n// the payload as its value\nexport const removeItem = item => ({\n    type: CartActionTypes.REMOVE_ITEM,\n    payload: item\n});\n\n// We create a new action that allows us to\n// clear an item from the cart, regardless\n// of its quantity. We get the item and\n// then we pass it into the payload as\n// its value\nexport const clearItemFromCart = item => ({\n    type: CartActionTypes.CLEAR_ITEM_FROM_CART,\n    payload: item\n});\n\n// This action only fires off the action type\nexport const clearCart = () => ({\n    type: CartActionTypes.CLEAR_CART\n});\n"]},"metadata":{},"sourceType":"module"}