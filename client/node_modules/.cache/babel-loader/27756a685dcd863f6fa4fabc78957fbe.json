{"ast":null,"code":"// Import connect to give us access to the selectors and state\nimport { connect } from 'react-redux'; // Import compose to allow us to curry our connect and components\n\nimport { compose } from 'redux'; // Import createStructuredSelector to allow mapStateToProps\n\nimport { createStructuredSelector } from 'reselect'; // Import relevant selectors that we need\n\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors'; // Import WithSpinner HOC\n\nimport WithSpinner from '../with-spinner/with-spinner.component'; // Import CollectionsOverview component\n\nimport CollectionsOverview from './collection-overview.component'; // The mapStateToProps sets our isLoading state\n// to the selectIsCollectionFetching selector\n// This allows us to set pass it into our WithSpinner\n// HOC component, to then make our spinner work\n// The prop needs to have the same name as the prop\n// that the HOC is expecting (isLoading in this case)\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionFetching\n}); // We could write the below as\n// connect(mapStateToProps)(WithSpinner(CollectionsOverview))\n// However, this can get confusing if we have more and\n// more HOCs that we are wrapping our components with\n// To avoid that, we can use compose to pass in the\n// relevant HOCs, and then we pass in the component\n// that we ultimately want to wrap - in this case, we\n// pass in connect and WithSpinner to the compose and\n// then we pass CollectionOverview into the whole thing\n\nconst CollectionsOverviewContainer = compose(connect(mapStateToProps), WithSpinner)(CollectionsOverview);\nexport default CollectionsOverviewContainer;","map":{"version":3,"sources":["/workspace/crwn-clothing/client/src/components/collections-overview/collections-overview.container.jsx"],"names":["connect","compose","createStructuredSelector","selectIsCollectionFetching","WithSpinner","CollectionsOverview","mapStateToProps","isLoading","CollectionsOverviewContainer"],"mappings":"AAAA;AACA,SAASA,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;;AACA,SAASC,wBAAT,QAAyC,UAAzC,C,CACA;;AACA,SAASC,0BAAT,QAA2C,iCAA3C,C,CACA;;AACA,OAAOC,WAAP,MAAwB,wCAAxB,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,iCAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,eAAe,GAAGJ,wBAAwB,CAAC;AAC7CK,EAAAA,SAAS,EAAEJ;AADkC,CAAD,CAAhD,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMK,4BAA4B,GAAGP,OAAO,CACxCD,OAAO,CAACM,eAAD,CADiC,EAExCF,WAFwC,CAAP,CAGnCC,mBAHmC,CAArC;AAKA,eAAeG,4BAAf","sourcesContent":["// Import connect to give us access to the selectors and state\nimport { connect } from 'react-redux';\n// Import compose to allow us to curry our connect and components\nimport { compose } from 'redux';\n// Import createStructuredSelector to allow mapStateToProps\nimport { createStructuredSelector } from 'reselect';\n// Import relevant selectors that we need\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\n// Import WithSpinner HOC\nimport WithSpinner from '../with-spinner/with-spinner.component';\n// Import CollectionsOverview component\nimport CollectionsOverview from './collection-overview.component';\n\n// The mapStateToProps sets our isLoading state\n// to the selectIsCollectionFetching selector\n// This allows us to set pass it into our WithSpinner\n// HOC component, to then make our spinner work\n// The prop needs to have the same name as the prop\n// that the HOC is expecting (isLoading in this case)\nconst mapStateToProps = createStructuredSelector({\n    isLoading: selectIsCollectionFetching\n});\n\n// We could write the below as\n// connect(mapStateToProps)(WithSpinner(CollectionsOverview))\n// However, this can get confusing if we have more and\n// more HOCs that we are wrapping our components with\n// To avoid that, we can use compose to pass in the\n// relevant HOCs, and then we pass in the component\n// that we ultimately want to wrap - in this case, we\n// pass in connect and WithSpinner to the compose and\n// then we pass CollectionOverview into the whole thing\nconst CollectionsOverviewContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner\n)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;\n"]},"metadata":{},"sourceType":"module"}