{"ast":null,"code":"// Import the action type so we can set it as the case\nimport { UserActionTypes } from './user.types'; // setCurrentUser is our action which takes a user\n// parameter and is passed in to the reducer. The\n// user parameter is the value that we set our\n// currentUser to, which will be passed into the\n// payload property of the action.\n// This is used instead of saying setState()\n\nexport const setCurrentUser = user => ({\n  // The type needs to be the same string that the\n  // reducer's switch statement is expecting\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user\n}); // This action is a function that just triggers\n// the actual sign in. It doesn't need a payload,\n// as we are only telling the saga that we need\n// to trigger our sign-in\n\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n}); // This call will get the actual current user\n// at the end of it, which will be our payload value\n\nexport const googleSignInSuccess = user => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_SUCCESS,\n  payload: user\n});\nexport const googleSignInFailure = error => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_FAILURE,\n  payload: error\n});","map":{"version":3,"sources":["/workspace/crwn-clothing/src/redux/user/user.actions.js"],"names":["UserActionTypes","setCurrentUser","user","type","SET_CURRENT_USER","payload","googleSignInStart","GOOGLE_SIGN_IN_START","googleSignInSuccess","GOOGLE_SIGN_IN_SUCCESS","googleSignInFailure","error","GOOGLE_SIGN_IN_FAILURE"],"mappings":"AAAA;AACA,SAASA,eAAT,QAAgC,cAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAGC,IAAI,KAAK;AACnC;AACA;AACAC,EAAAA,IAAI,EAAEH,eAAe,CAACI,gBAHa;AAInCC,EAAAA,OAAO,EAAEH;AAJ0B,CAAL,CAA3B,C,CAOP;AACA;AACA;AACA;;AACA,OAAO,MAAMI,iBAAiB,GAAG,OAAO;AACpCH,EAAAA,IAAI,EAAEH,eAAe,CAACO;AADc,CAAP,CAA1B,C,CAIP;AACA;;AACA,OAAO,MAAMC,mBAAmB,GAAGN,IAAI,KAAK;AACxCC,EAAAA,IAAI,EAAEH,eAAe,CAACS,sBADkB;AAExCJ,EAAAA,OAAO,EAAEH;AAF+B,CAAL,CAAhC;AAMP,OAAO,MAAMQ,mBAAmB,GAAGC,KAAK,KAAK;AACzCR,EAAAA,IAAI,EAAEH,eAAe,CAACY,sBADmB;AAEzCP,EAAAA,OAAO,EAAEM;AAFgC,CAAL,CAAjC","sourcesContent":["// Import the action type so we can set it as the case\nimport { UserActionTypes } from './user.types';\n\n// setCurrentUser is our action which takes a user\n// parameter and is passed in to the reducer. The\n// user parameter is the value that we set our\n// currentUser to, which will be passed into the\n// payload property of the action.\n// This is used instead of saying setState()\nexport const setCurrentUser = user => ({\n    // The type needs to be the same string that the\n    // reducer's switch statement is expecting\n    type: UserActionTypes.SET_CURRENT_USER,\n    payload: user\n});\n\n// This action is a function that just triggers\n// the actual sign in. It doesn't need a payload,\n// as we are only telling the saga that we need\n// to trigger our sign-in\nexport const googleSignInStart = () => ({\n    type: UserActionTypes.GOOGLE_SIGN_IN_START\n});\n\n// This call will get the actual current user\n// at the end of it, which will be our payload value\nexport const googleSignInSuccess = user => ({\n    type: UserActionTypes.GOOGLE_SIGN_IN_SUCCESS,\n    payload: user\n});\n\n\nexport const googleSignInFailure = error => ({\n    type: UserActionTypes.GOOGLE_SIGN_IN_FAILURE,\n    payload: error\n});\n"]},"metadata":{},"sourceType":"module"}