{"ast":null,"code":"var _jsxFileName = \"/workspace/crwn-clothing/src/components/header/header.component.jsx\";\nimport React from 'react'; // Import connect to enable access to reducer\n\nimport { connect } from 'react-redux'; // Import createStructured selector to allow multiple selector calls\n\nimport { createStructuredSelector } from 'reselect'; // Import auth from firebase utils for user authentication\n\nimport { auth } from '../../firebase/firebase.utils'; // Import the CartItem component\n\nimport CartIcon from '../cart-icon/cart-icon.component'; // Import the CartDropdown component\n\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component'; // Import selectors to pass into mapStateToProps\n\nimport { selectCurrentUser } from '../../redux/user/user.selectors'; // Import signOutStart action to enable dispatching the type to the listener\n\nimport { signOutStart } from '../../redux/user/user.actions';\nimport { selectCartHidden } from '../../redux/cart/cart.selectors'; // Import SVG icon using specific React syntax\n\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/crown.svg\"; // Import styled components\n\nimport { HeaderContainer, LogoContainer, OptionsContainer, OptionLink } from './header.styles';\n\nconst Header = ({\n  currentUser,\n  hidden\n}) => React.createElement(HeaderContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(LogoContainer, {\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(Logo, {\n  className: \"logo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n})), React.createElement(OptionsContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(OptionLink, {\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, \"HOME\"), React.createElement(OptionLink, {\n  to: \"/shop\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, \"SHOP\"), React.createElement(OptionLink, {\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, \"CONTACT\"), // If we are signed in, we want to render a div with SIGN OUT,\n// which signs the user out when they click it\ncurrentUser ? // Since we want a div here instead of a Link, we can still\n// use our OptionLink styled component, but us the as property\n// to specify that we want it to render as a div. If we wanted\n// to render it as another component instead, we can use as={}\n// and pass in the component name\nReact.createElement(OptionLink, {\n  as: \"div\",\n  onClick: () => auth.signOut(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, \"SIGN OUT\") : // Else, we want to display the link to take us to the signin page\nReact.createElement(OptionLink, {\n  to: \"/signin\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, \"SIGN IN\"), React.createElement(CartIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n})), hidden ? null : React.createElement(CartDropdown, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n})); // mapStateToProps is the function that we create to allow the\n// component to directly access the root reducer props\n// We use createStructuredSelector to automatically pass in\n// the top level state to our selector calls\n\n\nconst mapStateToProps = createStructuredSelector({\n  // We want to return both values as props here\n  currentUser: selectCurrentUser,\n  hidden: selectCartHidden\n}); // We need to create a mapDispatchToProps following our action\n// creation to enable it to be dispatched by the sign out button\n// when we move the functionality into sagas\n\nconst mapDispatchToProps = dispatch => ({\n  signOutStart: () => dispatch(signOutStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/workspace/crwn-clothing/src/components/header/header.component.jsx"],"names":["React","connect","createStructuredSelector","auth","CartIcon","CartDropdown","selectCurrentUser","signOutStart","selectCartHidden","HeaderContainer","LogoContainer","OptionsContainer","OptionLink","Header","currentUser","hidden","signOut","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,wBAAT,QAAyC,UAAzC,C,CACA;;AACA,SAASC,IAAT,QAAqB,+BAArB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,kCAArB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,0CAAzB,C,CACA;;AACA,SAASC,iBAAT,QAAkC,iCAAlC,C,CACA;;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,gBAAT,QAAiC,iCAAjC,C,CACA;;qGAEA;;AACA,SACIC,eADJ,EAEIC,aAFJ,EAGIC,gBAHJ,EAIIC,UAJJ,QAKO,iBALP;;AAOA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KACX,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAe,EAAA,EAAE,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,EAII,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAII,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,EAOI,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPJ,EAWQ;AACA;AACAD,WAAW,GACX;AACA;AACA;AACA;AACA;AACC,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,KAAf;AAAqB,EAAA,OAAO,EAAE,MAAMX,IAAI,CAACa,OAAL,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANU,GAQX;AACC,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAtBT,EAwBI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAxBJ,CAJJ,EA+BQD,MAAM,GAAG,IAAH,GAAU,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA/BxB,CADJ,C,CAqCA;AACA;AACA;AACA;;;AACA,MAAME,eAAe,GAAGf,wBAAwB,CAAC;AAC7C;AACAY,EAAAA,WAAW,EAAER,iBAFgC;AAG7CS,EAAAA,MAAM,EAAEP;AAHqC,CAAD,CAAhD,C,CAMA;AACA;AACA;;AACA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCZ,EAAAA,YAAY,EAAE,MAAMY,QAAQ,CAACZ,YAAY,EAAb;AADQ,CAAL,CAAnC;;AAIA,eAAeN,OAAO,CAClBgB,eADkB,EAElBC,kBAFkB,CAAP,CAGbL,MAHa,CAAf","sourcesContent":["import React from 'react';\n// Import connect to enable access to reducer\nimport { connect } from 'react-redux';\n// Import createStructured selector to allow multiple selector calls\nimport { createStructuredSelector } from 'reselect';\n// Import auth from firebase utils for user authentication\nimport { auth } from '../../firebase/firebase.utils'\n// Import the CartItem component\nimport CartIcon from '../cart-icon/cart-icon.component';\n// Import the CartDropdown component\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\n// Import selectors to pass into mapStateToProps\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\n// Import signOutStart action to enable dispatching the type to the listener\nimport { signOutStart } from '../../redux/user/user.actions';\nimport { selectCartHidden } from '../../redux/cart/cart.selectors';\n// Import SVG icon using specific React syntax\nimport { ReactComponent as Logo } from '../../assets/crown.svg';\n// Import styled components\nimport {\n    HeaderContainer,\n    LogoContainer,\n    OptionsContainer,\n    OptionLink\n} from './header.styles';\n\nconst Header = ({ currentUser, hidden }) => (\n    <HeaderContainer>\n        <LogoContainer to='/'>\n            <Logo className='logo' />\n        </LogoContainer>\n        <OptionsContainer>\n            <OptionLink to='/'>\n                HOME\n            </OptionLink>\n            <OptionLink to='/shop'>\n                SHOP\n            </OptionLink>\n            <OptionLink to='/'>\n                CONTACT\n            </OptionLink>\n            {\n                // If we are signed in, we want to render a div with SIGN OUT,\n                // which signs the user out when they click it\n                currentUser ?\n                // Since we want a div here instead of a Link, we can still\n                // use our OptionLink styled component, but us the as property\n                // to specify that we want it to render as a div. If we wanted\n                // to render it as another component instead, we can use as={}\n                // and pass in the component name\n                (<OptionLink as='div' onClick={() => auth.signOut()}>SIGN OUT</OptionLink>)\n                :\n                // Else, we want to display the link to take us to the signin page\n                (<OptionLink to='/signin'>SIGN IN</OptionLink>)\n            }\n            <CartIcon />\n        </OptionsContainer>\n        {\n            hidden ? null : <CartDropdown />\n        }\n    </HeaderContainer>\n);\n\n// mapStateToProps is the function that we create to allow the\n// component to directly access the root reducer props\n// We use createStructuredSelector to automatically pass in\n// the top level state to our selector calls\nconst mapStateToProps = createStructuredSelector({\n    // We want to return both values as props here\n    currentUser: selectCurrentUser,\n    hidden: selectCartHidden\n});\n\n// We need to create a mapDispatchToProps following our action\n// creation to enable it to be dispatched by the sign out button\n// when we move the functionality into sagas\nconst mapDispatchToProps = dispatch => ({\n    signOutStart: () => dispatch(signOutStart())\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);"]},"metadata":{},"sourceType":"module"}