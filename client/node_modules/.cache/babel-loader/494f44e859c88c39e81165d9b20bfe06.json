{"ast":null,"code":"var _jsxFileName = \"/workspace/crwn-clothing/client/src/pages/checkout/checkout.component.jsx\";\nimport React from 'react'; // Import connect to enable pulling state\n\nimport { connect } from 'react-redux'; // Import createStructuredSelector\n\nimport { createStructuredSelector } from 'reselect'; // Import CheckoutItem\n\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component'; // Import StripeCheckoutButton\n\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component'; // Import selectCartItems and selectCartTotal selectors\n\nimport { selectCartItems, selectCartTotal } from '../../redux/cart/cart.selectors'; // Import styled components\n\nimport { CheckoutPageContainer, CheckoutHeaderContainer, HeaderBlockContainer, EmptyMessageContainer, TotalContainer, TestWarningContainer, ButtonContainer } from './checkout.styles';\n\nconst CheckoutPage = ({\n  cartItems,\n  total\n}) => React.createElement(CheckoutPageContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(CheckoutHeaderContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(HeaderBlockContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, \"Product\")), React.createElement(HeaderBlockContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"Description\")), React.createElement(HeaderBlockContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, \"Quantity\")), React.createElement(HeaderBlockContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, \"Price\")), React.createElement(HeaderBlockContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, \"Remove\"))), // Map over our cartItems and display them\n// in the CheckoutItem component\n// If there are cartItems, display them.\n// If not, display the empty-message\ncartItems.length ? cartItems.map(cartItem => React.createElement(CheckoutItem, {\n  key: cartItem.id,\n  cartItem: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n})) : React.createElement(EmptyMessageContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, \"Your cart is empty\"), React.createElement(TotalContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, \"TOTAL: \\xA3\", total), React.createElement(TestWarningContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, \"*Please use the following test credit card for payments*\", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}), \"4242 4242 4242 4242 - Exp: 01/21 - CVV: 123\"), React.createElement(ButtonContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}, React.createElement(StripeCheckoutButton, {\n  price: total,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n})));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  total: selectCartTotal\n});\nexport default connect(mapStateToProps)(CheckoutPage);","map":{"version":3,"sources":["/workspace/crwn-clothing/client/src/pages/checkout/checkout.component.jsx"],"names":["React","connect","createStructuredSelector","CheckoutItem","StripeCheckoutButton","selectCartItems","selectCartTotal","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","EmptyMessageContainer","TotalContainer","TestWarningContainer","ButtonContainer","CheckoutPage","cartItems","total","length","map","cartItem","id","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,wBAAT,QAAyC,UAAzC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,wDAAzB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,wDAAjC,C,CACA;;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,iCAAjD,C,CACA;;AACA,SACIC,qBADJ,EAEIC,uBAFJ,EAGIC,oBAHJ,EAIIC,qBAJJ,EAKIC,cALJ,EAMIC,oBANJ,EAOIC,eAPJ,QAQO,mBARP;;AAUA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KACjB,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ,EAII,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAJJ,EAOI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAPJ,EAUI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CAVJ,EAaI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAbJ,CADJ,EAmBQ;AACA;AACA;AACA;AACAD,SAAS,CAACE,MAAV,GACIF,SAAS,CAACG,GAAV,CAAcC,QAAQ,IAClB,oBAAC,YAAD;AACI,EAAA,GAAG,EAAEA,QAAQ,CAACC,EADlB;AAEI,EAAA,QAAQ,EAAED,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,GAQI,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA/BZ,EAoCI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACmBH,KADnB,CApCJ,EAuCI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,gDAvCJ,EA4CI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,oBAAD;AAAsB,EAAA,KAAK,EAAGA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CA5CJ,CADJ;;AAmDA,MAAMK,eAAe,GAAGnB,wBAAwB,CAAC;AAC7Ca,EAAAA,SAAS,EAAEV,eADkC;AAE7CW,EAAAA,KAAK,EAAEV;AAFsC,CAAD,CAAhD;AAKA,eAAeL,OAAO,CAACoB,eAAD,CAAP,CAAyBP,YAAzB,CAAf","sourcesContent":["import React from 'react';\n// Import connect to enable pulling state\nimport { connect } from 'react-redux';\n// Import createStructuredSelector\nimport { createStructuredSelector } from 'reselect';\n// Import CheckoutItem\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\n// Import StripeCheckoutButton\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component';\n// Import selectCartItems and selectCartTotal selectors\nimport { selectCartItems, selectCartTotal } from '../../redux/cart/cart.selectors';\n// Import styled components\nimport {\n    CheckoutPageContainer,\n    CheckoutHeaderContainer,\n    HeaderBlockContainer,\n    EmptyMessageContainer,\n    TotalContainer,\n    TestWarningContainer,\n    ButtonContainer\n} from './checkout.styles';\n\nconst CheckoutPage = ({ cartItems, total }) => (\n    <CheckoutPageContainer>\n        <CheckoutHeaderContainer>\n            <HeaderBlockContainer>\n                <span>Product</span>\n            </HeaderBlockContainer>\n            <HeaderBlockContainer>\n                <span>Description</span>\n            </HeaderBlockContainer>\n            <HeaderBlockContainer>\n                <span>Quantity</span>\n            </HeaderBlockContainer>\n            <HeaderBlockContainer>\n                <span>Price</span>\n            </HeaderBlockContainer>\n            <HeaderBlockContainer>\n                <span>Remove</span>\n            </HeaderBlockContainer>\n        </CheckoutHeaderContainer>\n        {\n            // Map over our cartItems and display them\n            // in the CheckoutItem component\n            // If there are cartItems, display them.\n            // If not, display the empty-message\n            cartItems.length ? (\n                cartItems.map(cartItem =>\n                    <CheckoutItem \n                        key={cartItem.id}\n                        cartItem={cartItem}\n                    />\n                )\n            ) : (\n                <EmptyMessageContainer>\n                    Your cart is empty\n                </EmptyMessageContainer>\n            )\n        }\n        <TotalContainer>\n            TOTAL: &pound;{total}\n        </TotalContainer>\n        <TestWarningContainer>\n            *Please use the following test credit card for payments*\n            <br />\n            4242 4242 4242 4242 - Exp: 01/21 - CVV: 123\n        </TestWarningContainer>\n        <ButtonContainer>\n            <StripeCheckoutButton price={ total } />\n        </ButtonContainer>\n    </CheckoutPageContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems,\n    total: selectCartTotal\n});\n\nexport default connect(mapStateToProps)(CheckoutPage);\n"]},"metadata":{},"sourceType":"module"}