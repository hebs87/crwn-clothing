{"ast":null,"code":"var _jsxFileName = \"/workspace/crwn-clothing/client/src/pages/collection/collection.component.jsx\";\nimport React from 'react'; // Import connect to enable pulling props from state\n\nimport { connect } from 'react-redux'; // Import CollectionItem that displays the item\n\nimport CollectionItem from '../../components/collection-item/collection-item.component'; // Import selectShopCollection selector to get relevant collection\n\nimport { selectShopCollection } from '../../redux/shop/shop.selectors'; // Import styled components\n\nimport { CollectionPageContainer, CollectionTitle, CollectionItemsContainer } from './collection.styles';\n\nconst CollectionPage = ({\n  collection\n}) => {\n  // Destructure our title and items from the\n  // collection prop\n  const {\n    title,\n    items\n  } = collection;\n  return React.createElement(CollectionPageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(CollectionTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, title), React.createElement(CollectionItemsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, // We map over our items and display\n  // them in the CollectionItem component\n  items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))));\n}; // state is the overall state of the root reducer\n// ownProps is the second, optional parameter of\n// mapStateToProps. It is the props of the component\n// that we are wrapping with our connect() method\n// We need this so that we can use the match prop\n// that was passed in from the Route component in\n// the App.js file and then the ShopPage\n// In the function, we call the selectShopCollection\n// which takes the ownProps.match.params.collectionId\n// argument (this gives us the string of the URL).\n// This argument is passed into the selector's function\n// as the collectionUrlParam and is then compared\n// to the map that we created for the selector\n// We also MUST pass in the state, because this\n// selector needs a part of the state, depending on\n// the URL parameter\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectShopCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["/workspace/crwn-clothing/client/src/pages/collection/collection.component.jsx"],"names":["React","connect","CollectionItem","selectShopCollection","CollectionPageContainer","CollectionTitle","CollectionItemsContainer","CollectionPage","collection","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,4DAA3B,C,CACA;;AACA,SAASC,oBAAT,QAAqC,iCAArC,C,CAEA;;AACA,SACIC,uBADJ,EAEIC,eAFJ,EAGIC,wBAHJ,QAIO,qBAJP;;AAMA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACvC;AACA;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBF,UAAzB;AACA,SACI,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBC,KAAnB,CADJ,EAEI,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ;AACA;AACAC,EAAAA,KAAK,CAACC,GAAN,CAAUC,IAAI,IACV,oBAAC,cAAD;AACI,IAAA,GAAG,EAAGA,IAAI,CAACC,EADf;AAEI,IAAA,IAAI,EAAGD,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJR,CAFJ,CADJ;AAiBH,CArBD,C,CAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1CR,EAAAA,UAAU,EAAEL,oBAAoB,CAACa,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAApB,CAAyDJ,KAAzD;AAD8B,CAAtB,CAAxB;;AAIA,eAAed,OAAO,CAACa,eAAD,CAAP,CAAyBP,cAAzB,CAAf","sourcesContent":["import React from 'react';\n// Import connect to enable pulling props from state\nimport { connect } from 'react-redux';\n// Import CollectionItem that displays the item\nimport CollectionItem from '../../components/collection-item/collection-item.component';\n// Import selectShopCollection selector to get relevant collection\nimport { selectShopCollection } from '../../redux/shop/shop.selectors';\n\n// Import styled components\nimport {\n    CollectionPageContainer,\n    CollectionTitle,\n    CollectionItemsContainer\n} from './collection.styles';\n\nconst CollectionPage = ({ collection }) => {\n    // Destructure our title and items from the\n    // collection prop\n    const { title, items } = collection;\n    return (\n        <CollectionPageContainer>\n            <CollectionTitle>{ title }</CollectionTitle>\n            <CollectionItemsContainer>\n                {\n                    // We map over our items and display\n                    // them in the CollectionItem component\n                    items.map(item => (\n                        <CollectionItem\n                            key={ item.id }\n                            item={ item }\n                        />\n                    ))\n                }\n            </CollectionItemsContainer>\n        </CollectionPageContainer>\n    )\n};\n\n// state is the overall state of the root reducer\n// ownProps is the second, optional parameter of\n// mapStateToProps. It is the props of the component\n// that we are wrapping with our connect() method\n// We need this so that we can use the match prop\n// that was passed in from the Route component in\n// the App.js file and then the ShopPage\n// In the function, we call the selectShopCollection\n// which takes the ownProps.match.params.collectionId\n// argument (this gives us the string of the URL).\n// This argument is passed into the selector's function\n// as the collectionUrlParam and is then compared\n// to the map that we created for the selector\n// We also MUST pass in the state, because this\n// selector needs a part of the state, depending on\n// the URL parameter\nconst mapStateToProps = (state, ownProps) => ({\n    collection: selectShopCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);\n"]},"metadata":{},"sourceType":"module"}