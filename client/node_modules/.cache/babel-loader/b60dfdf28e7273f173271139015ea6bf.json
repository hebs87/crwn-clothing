{"ast":null,"code":"var _jsxFileName = \"/workspace/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React from 'react'; // Import FormInput for our form\n\nimport FormInput from '../form-input/form-input.component'; // Import CustomButton for our form's buttons\n\nimport CustomButton from '../custom-button/custom-button.component'; // Import auth and createUserProfileDocument for signing up\n\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils'; // Import styled components\n\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles'; // We want to set a state so we create a Class component\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      // We want to prevent the default when the form is submitted\n      event.preventDefault(); // We destructure all the props from the state\n\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state; // If the passwords don't match, we display an alert\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords don't match\");\n        return;\n      } // If the passwords do match, we have a try-catch error block\n      // createUserWithEmailAndPassword is a method from the auth\n      // library which create use with email address and password,\n      // and then returns the user back to us. So here, we want to\n      // destructure the user that is returned from that method\n      // Once that's done, we then want to createUserProfileDocument\n      // which has the values of the user and the displayName object\n      // We then set the state back to the original state\n\n\n      try {\n        const {\n          user\n        } = await auth.createUserWithEmailAndPassword(email, password);\n        await createUserProfileDocument(user, {\n          displayName\n        });\n        this.setState({\n          displayName: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    // Destructure props from our state\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return React.createElement(SignUpContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(SignUpTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      handleChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      handleChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      handleChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      handleChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/workspace/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","FormInput","CustomButton","auth","createUserProfileDocument","SignUpContainer","SignUpTitle","SignUp","Component","constructor","props","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","alert","user","createUserWithEmailAndPassword","setState","error","console","handleChange","name","value","target","render"],"mappings":"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","sourcesContent":["import React from 'react';\n// Import FormInput for our form\nimport FormInput from '../form-input/form-input.component';\n// Import CustomButton for our form's buttons\nimport CustomButton from '../custom-button/custom-button.component';\n// Import auth and createUserProfileDocument for signing up\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n// Import styled components\nimport {\n    SignUpContainer,\n    SignUpTitle\n} from './sign-up.styles';\n\n// We want to set a state so we create a Class component\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        // We want to prevent the default when the form is submitted\n        event.preventDefault();\n        // We destructure all the props from the state\n        const { displayName, email, password, confirmPassword } = this.state;\n        // If the passwords don't match, we display an alert\n        if (password !== confirmPassword) {\n            alert(\"Passwords don't match\");\n            return;\n        }\n        // If the passwords do match, we have a try-catch error block\n        // createUserWithEmailAndPassword is a method from the auth\n        // library which create use with email address and password,\n        // and then returns the user back to us. So here, we want to\n        // destructure the user that is returned from that method\n        // Once that's done, we then want to createUserProfileDocument\n        // which has the values of the user and the displayName object\n        // We then set the state back to the original state\n        try {\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\n\n            await createUserProfileDocument(user, { displayName });\n\n            this.setState({\n                displayName: '',\n                email: '',\n                password: '',\n                confirmPassword: ''\n            });\n        } catch(error) {\n            console.error(error);\n        }\n    };\n\n    // This is the same as the sign in method\n    handleChange = event => {\n        const { name, value } = event.target;\n\n        this.setState({ [name]: value });\n     }\n\n    render() {\n        // Destructure props from our state\n        const { displayName, email, password, confirmPassword } = this.state;\n\n        return(\n            <SignUpContainer>\n                <SignUpTitle>I do not have an account</SignUpTitle>\n                <span>Sign up with your email and password</span>\n\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\n                    <FormInput\n                        type='text'\n                        name='displayName'\n                        value={ displayName }\n                        handleChange={ this.handleChange }\n                        label='Display Name'\n                        required\n                    />\n                    <FormInput\n                        type='email'\n                        name='email'\n                        value={ email }\n                        handleChange={ this.handleChange }\n                        label='Email'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={ password }\n                        handleChange={ this.handleChange }\n                        label='Password'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={ confirmPassword }\n                        handleChange={ this.handleChange }\n                        label='Confirm Password'\n                        required\n                    />\n\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                </form>\n            </SignUpContainer>\n        );\n    }\n}\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}