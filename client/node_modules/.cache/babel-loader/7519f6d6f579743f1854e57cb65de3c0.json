{"ast":null,"code":"// combineReducers component allows us to\n// combine all sub-reducers into one master\nimport { combineReducers } from 'redux'; // Import persistReducer to allow us to\n// persist our root reducer state\n\nimport { persistReducer } from 'redux-persist'; // Import storage to allow us access to local storage\n\nimport storage from 'redux-persist/lib/storage'; // Import userReducer\n\nimport userReducer from './user/user.reducer'; // Import cartReducer\n\nimport cartReducer from './cart/cart.reducer'; // Import directoryReducer\n\nimport directoryReducer from './directory/directory.reducer'; // Import shopReducer\n\nimport shopReducer from './shop/shop.reducer'; // We need to create a persistConfig, which is a\n// JSON object that contains the potential config\n// that we want to use for redux to persist the state\n\nconst persistConfig = {\n  // The key is defining at which point we want\n  // to start storing everything (root in this case)\n  key: 'root',\n  // We pass storage in as the key, so we are\n  // saying we want whatever storage object from\n  // redux-persist we are trying to use is\n  storage,\n  // The whitelist is an array containing the\n  // string names of the reducers that we want\n  // to store - as the user is already being\n  // persisted in Firebase, we only want to\n  // store the cart\n  whitelist: ['cart']\n}; // After we've created persistConfig, we need to\n// define the combineReducers as the rootReducer\n// as we'll need to pass this in to persistReducer\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n}); // Then we amend our export to export the persistReducer\n// and we pass in our persistConfig and rootReducer\n\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/workspace/crwn-clothing/client/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","shopReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory","shop"],"mappings":"AAAA;AACA;AACA,SAASA,eAAT,QAAgC,OAAhC,C,CACA;AACA;;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,qBAAxB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,qBAAxB,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,+BAA7B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,qBAAxB,C,CAEA;AACA;AACA;;AACA,MAAMC,aAAa,GAAG;AAClB;AACA;AACAC,EAAAA,GAAG,EAAE,MAHa;AAIlB;AACA;AACA;AACAN,EAAAA,OAPkB;AAQlB;AACA;AACA;AACA;AACA;AACAO,EAAAA,SAAS,EAAE,CAAC,MAAD;AAbO,CAAtB,C,CAgBA;AACA;AACA;;AACA,MAAMC,WAAW,GAAGV,eAAe,CAAC;AAChCW,EAAAA,IAAI,EAAER,WAD0B;AAEhCS,EAAAA,IAAI,EAAER,WAF0B;AAGhCS,EAAAA,SAAS,EAAER,gBAHqB;AAIhCS,EAAAA,IAAI,EAAER;AAJ0B,CAAD,CAAnC,C,CAOA;AACA;;AACA,eAAeL,cAAc,CAACM,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["// combineReducers component allows us to\n// combine all sub-reducers into one master\nimport { combineReducers } from 'redux';\n// Import persistReducer to allow us to\n// persist our root reducer state\nimport { persistReducer } from 'redux-persist';\n// Import storage to allow us access to local storage\nimport storage from 'redux-persist/lib/storage';\n\n// Import userReducer\nimport userReducer from './user/user.reducer';\n// Import cartReducer\nimport cartReducer from './cart/cart.reducer';\n// Import directoryReducer\nimport directoryReducer from './directory/directory.reducer';\n// Import shopReducer\nimport shopReducer from './shop/shop.reducer';\n\n// We need to create a persistConfig, which is a\n// JSON object that contains the potential config\n// that we want to use for redux to persist the state\nconst persistConfig = {\n    // The key is defining at which point we want\n    // to start storing everything (root in this case)\n    key: 'root',\n    // We pass storage in as the key, so we are\n    // saying we want whatever storage object from\n    // redux-persist we are trying to use is\n    storage,\n    // The whitelist is an array containing the\n    // string names of the reducers that we want\n    // to store - as the user is already being\n    // persisted in Firebase, we only want to\n    // store the cart\n    whitelist: ['cart']\n};\n\n// After we've created persistConfig, we need to\n// define the combineReducers as the rootReducer\n// as we'll need to pass this in to persistReducer\nconst rootReducer = combineReducers({\n    user: userReducer,\n    cart: cartReducer,\n    directory: directoryReducer,\n    shop: shopReducer\n});\n\n// Then we amend our export to export the persistReducer\n// and we pass in our persistConfig and rootReducer\nexport default persistReducer(persistConfig, rootReducer);\n"]},"metadata":{},"sourceType":"module"}