{"ast":null,"code":"var _jsxFileName = \"/workspace/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from 'react'; // Import Route to enable advanced routing\n\nimport { Route } from 'react-router-dom'; // Import connect to enable passing in mapDispatchToProps\n\nimport { connect } from 'react-redux'; // Import fetchCollectionsStart action to allow passing snapshot to props\n\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions'; // Import CollectionsOverviewContainer\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container'; // Import CollectionPageContainer\n\nimport CollectionPageContainer from '../collection/collection.container'; // This was a class component, but we've now converted it\n// to a functional component, as we are using the useEffect()\n// Hoop to replace the componentDidMount() lifecycle method.\n// As the ShopPage is rendered with the route in App.js,\n// match is one of its props that ShopPage will have access\n// to. match holds the path that is being rendered, so if\n// we destructure it from our props, then pass match.path\n// into the Route path as a string inerpolated expression,\n// it will ensure the /shop route (exact match) takes us to\n// the CollectionOverview component.\n// In the second route, we pass `${match.path}/:collectionId`\n// into the path. This gets the match.path, which is /shop\n// and adds the string value of the relevant collectionId\n// to the url (hats, jackets, etc.) and then renders the\n// CollectionPage component\n// We need to destructure both match and fetchCollectionsStart\n// from our props\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  // We use the useEffect Hook to behave like a\n  // componentDidMount() so that our fetchCollectionsStart\n  // function is called when the component first renders\n  useEffect(() => {\n    // We call fetchCollectionsStart the moment our\n    // component mounts, which then pulls in the\n    // data from the reducer\n    fetchCollectionsStart();\n  });\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n}; // The mapDispatchToProps uses a dispatch function which\n// dispatched the fetchCollectionStartAsync method\n// as the fetchCollectionStartAsync value \n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/workspace/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","fetchCollectionsStart","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,qBAAT,QAAsC,+BAAtC,C,CAEA;;AACA,OAAOC,4BAAP,MAAyC,sEAAzC,C,CACA;;AACA,OAAOC,uBAAP,MAAoC,oCAApC,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEH,EAAAA,qBAAF;AAAyBI,EAAAA;AAAzB,CAAD,KAAsC;AACnD;AACA;AACA;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA;AACAG,IAAAA,qBAAqB;AAExB,GANQ,CAAT;AAQA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,KAAK,MADT;AAEI,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,EAFxB;AAGI,IAAA,SAAS,EAAEJ,4BAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBADxB;AAEI,IAAA,SAAS,EAAEH,uBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAaH,CAzBD,C,CA2BA;AACA;AACA;;;AACA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpCP,EAAAA,qBAAqB,EAAE,MACnBO,QAAQ,CAACP,qBAAqB,EAAtB;AAFwB,CAAL,CAAnC;;AAKA,eAAeD,OAAO,CAClB,IADkB,EAElBO,kBAFkB,CAAP,CAGbH,QAHa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\n// Import Route to enable advanced routing\nimport { Route } from 'react-router-dom';\n// Import connect to enable passing in mapDispatchToProps\nimport { connect } from 'react-redux';\n\n// Import fetchCollectionsStart action to allow passing snapshot to props\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\n\n// Import CollectionsOverviewContainer\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\n// Import CollectionPageContainer\nimport CollectionPageContainer from '../collection/collection.container';\n\n\n// This was a class component, but we've now converted it\n// to a functional component, as we are using the useEffect()\n// Hoop to replace the componentDidMount() lifecycle method.\n// As the ShopPage is rendered with the route in App.js,\n// match is one of its props that ShopPage will have access\n// to. match holds the path that is being rendered, so if\n// we destructure it from our props, then pass match.path\n// into the Route path as a string inerpolated expression,\n// it will ensure the /shop route (exact match) takes us to\n// the CollectionOverview component.\n// In the second route, we pass `${match.path}/:collectionId`\n// into the path. This gets the match.path, which is /shop\n// and adds the string value of the relevant collectionId\n// to the url (hats, jackets, etc.) and then renders the\n// CollectionPage component\n// We need to destructure both match and fetchCollectionsStart\n// from our props\nconst ShopPage = ({ fetchCollectionsStart, match }) => {\n    // We use the useEffect Hook to behave like a\n    // componentDidMount() so that our fetchCollectionsStart\n    // function is called when the component first renders\n    useEffect(() => {\n        // We call fetchCollectionsStart the moment our\n        // component mounts, which then pulls in the\n        // data from the reducer\n        fetchCollectionsStart();\n\n    });\n    \n    return (\n        <div className='shop-page'>\n            <Route\n                exact\n                path={`${match.path}`}\n                component={CollectionsOverviewContainer}\n            />\n            <Route\n                path={`${match.path}/:collectionId`}\n                component={CollectionPageContainer}\n            />\n        </div>\n    )\n};\n\n// The mapDispatchToProps uses a dispatch function which\n// dispatched the fetchCollectionStartAsync method\n// as the fetchCollectionStartAsync value \nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStart: () =>\n        dispatch(fetchCollectionsStart())\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}