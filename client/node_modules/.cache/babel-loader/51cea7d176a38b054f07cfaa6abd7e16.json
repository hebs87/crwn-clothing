{"ast":null,"code":"var _jsxFileName = \"/workspace/crwn-clothing/src/components/directory/directory.component.jsx\";\nimport React from 'react'; // Import connect HOC to enable pulling props from state\n\nimport { connect } from 'react-redux'; // Import createStructured selector to allow multiple selector calls\n\nimport { createStructuredSelector } from 'reselect'; // Import directory selector to pass in to mapStateToProps\n\nimport { selectDirectorySections } from '../../redux/directory/directory.selectors'; // Import MenuItem component\n\nimport MenuItem from '../menu-item/menu-item.component'; // Import styled components\n\nimport { DirectoryMenuContainer } from './directory.styles';\n\nconst Directory = ({\n  sections\n}) => React.createElement(DirectoryMenuContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, // We want to map over our array and render the \n// MenuItem. We also want to destructure the\n// props and pass in the relevant ones\n// As the majority of props at the same as the arguments\n// that we are passing into the MenuItem component, we can\n// use the spread operator to pass them in at once\nsections.map(({\n  id,\n  ...otherSectionProps\n}) => React.createElement(MenuItem, Object.assign({\n  key: id\n}, otherSectionProps, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}))));\n\nconst mapStateToProps = createStructuredSelector({\n  sections: selectDirectorySections\n});\nexport default connect(mapStateToProps)(Directory);","map":{"version":3,"sources":["/workspace/crwn-clothing/src/components/directory/directory.component.jsx"],"names":["React","connect","createStructuredSelector","selectDirectorySections","MenuItem","DirectoryMenuContainer","Directory","sections","map","id","otherSectionProps","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,wBAAT,QAAyC,UAAzC,C,CACA;;AACA,SAASC,uBAAT,QAAwC,2CAAxC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,kCAArB,C,CACA;;AACA,SAASC,sBAAT,QAAuC,oBAAvC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACd,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQ;AACA;AACA;AACA;AACA;AACA;AACAA,QAAQ,CAACC,GAAT,CAAa,CAAC;AAAEC,EAAAA,EAAF;AAAM,KAAGC;AAAT,CAAD,KACT,oBAAC,QAAD;AACI,EAAA,GAAG,EAAED;AADT,GAESC,iBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ,CARR,CADJ;;AAmBA,MAAMC,eAAe,GAAGT,wBAAwB,CAAE;AAC9CK,EAAAA,QAAQ,EAAEJ;AADoC,CAAF,CAAhD;AAIA,eAAeF,OAAO,CAACU,eAAD,CAAP,CAAyBL,SAAzB,CAAf","sourcesContent":["import React from 'react';\n// Import connect HOC to enable pulling props from state\nimport { connect } from 'react-redux';\n// Import createStructured selector to allow multiple selector calls\nimport { createStructuredSelector } from 'reselect';\n// Import directory selector to pass in to mapStateToProps\nimport { selectDirectorySections } from '../../redux/directory/directory.selectors';\n// Import MenuItem component\nimport MenuItem from '../menu-item/menu-item.component';\n// Import styled components\nimport { DirectoryMenuContainer } from './directory.styles';\n\nconst Directory = ({ sections }) => (\n    <DirectoryMenuContainer>\n        {\n            // We want to map over our array and render the \n            // MenuItem. We also want to destructure the\n            // props and pass in the relevant ones\n            // As the majority of props at the same as the arguments\n            // that we are passing into the MenuItem component, we can\n            // use the spread operator to pass them in at once\n            sections.map(({ id, ...otherSectionProps }) => (\n                <MenuItem\n                    key={id}\n                    { ...otherSectionProps }\n                />\n            ))\n        }\n    </DirectoryMenuContainer>\n);\n\nconst mapStateToProps = createStructuredSelector ({\n    sections: selectDirectorySections\n});\n\nexport default connect(mapStateToProps)(Directory);\n"]},"metadata":{},"sourceType":"module"}