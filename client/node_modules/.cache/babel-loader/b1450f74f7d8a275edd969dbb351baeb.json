{"ast":null,"code":"var _jsxFileName = \"/workspace/crwn-clothing/src/components/menu-item/menu-item.component.jsx\";\nimport React from 'react'; // Import withRouter() to enable the avodiance of prop drilling\n\nimport { withRouter } from 'react-router-dom'; // Import styled components\n\nimport { MenuItemContainer, BackgroundImageContainer, ContentContainer, ContentTitle, ContentSubtitle } from './menu-item.styles'; // We want to dynamically generate the title,\n// so we need to deconstruct it in the function parameters\n// We pass in the imageUrl and set it as the background\n// image of the menu-item div, but we need to set it as a\n// style on the element and use literal templating to pass\n// in the imageUrl, which enables it to dynamically change\n// if we change the root imageUrl\n// We also want to add the size to our className, if it\n// is present (in the raw json data)\n// Once we pass in the linkUrl and history props, we can\n// give the menu-item div an onClick argument, which takes\n// a function to return the relevant URL\n\nconst MenuItem = ({\n  title,\n  imageUrl,\n  size,\n  history,\n  linkUrl,\n  match\n}) => React.createElement(MenuItemContainer, {\n  size: size,\n  onClick: () => history.push(`${match.url}${linkUrl}`),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(BackgroundImageContainer, {\n  className: \"background-image\",\n  imageUrl: imageUrl,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}), React.createElement(ContentContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(ContentTitle, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, title.toUpperCase()), React.createElement(ContentSubtitle, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, \"SHOP NOW\")));\n\nexport default withRouter(MenuItem);","map":{"version":3,"sources":["/workspace/crwn-clothing/src/components/menu-item/menu-item.component.jsx"],"names":["React","withRouter","MenuItemContainer","BackgroundImageContainer","ContentContainer","ContentTitle","ContentSubtitle","MenuItem","title","imageUrl","size","history","linkUrl","match","push","url","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,SACIC,iBADJ,EAEIC,wBAFJ,EAGIC,gBAHJ,EAIIC,YAJJ,EAKIC,eALJ,QAMO,oBANP,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,IAAnB;AAAyBC,EAAAA,OAAzB;AAAkCC,EAAAA,OAAlC;AAA2CC,EAAAA;AAA3C,CAAD,KACb,oBAAC,iBAAD;AACI,EAAA,IAAI,EAAEH,IADV;AAEI,EAAA,OAAO,EAAE,MAAMC,OAAO,CAACG,IAAR,CAAc,GAAED,KAAK,CAACE,GAAI,GAAEH,OAAQ,EAApC,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAII,oBAAC,wBAAD;AACI,EAAA,SAAS,EAAC,kBADd;AAEI,EAAA,QAAQ,EAAGH,QAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,EAQI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAgBD,KAAK,CAACQ,WAAN,EAAhB,CADJ,EAEI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CARJ,CADJ;;AAgBA,eAAef,UAAU,CAACM,QAAD,CAAzB","sourcesContent":["import React from 'react';\n// Import withRouter() to enable the avodiance of prop drilling\nimport { withRouter } from 'react-router-dom';\n// Import styled components\nimport {\n    MenuItemContainer,\n    BackgroundImageContainer,\n    ContentContainer,\n    ContentTitle,\n    ContentSubtitle\n} from './menu-item.styles';\n\n// We want to dynamically generate the title,\n// so we need to deconstruct it in the function parameters\n// We pass in the imageUrl and set it as the background\n// image of the menu-item div, but we need to set it as a\n// style on the element and use literal templating to pass\n// in the imageUrl, which enables it to dynamically change\n// if we change the root imageUrl\n// We also want to add the size to our className, if it\n// is present (in the raw json data)\n// Once we pass in the linkUrl and history props, we can\n// give the menu-item div an onClick argument, which takes\n// a function to return the relevant URL\nconst MenuItem = ({ title, imageUrl, size, history, linkUrl, match }) => (\n    <MenuItemContainer\n        size={size}\n        onClick={() => history.push(`${match.url}${linkUrl}`)}\n    >\n        <BackgroundImageContainer\n            className='background-image'\n            imageUrl={ imageUrl }>\n        </BackgroundImageContainer>\n        <ContentContainer>\n            <ContentTitle>{ title.toUpperCase() }</ContentTitle>\n            <ContentSubtitle>SHOP NOW</ContentSubtitle>\n        </ContentContainer>\n    </MenuItemContainer>\n);\n\nexport default withRouter(MenuItem);\n"]},"metadata":{},"sourceType":"module"}